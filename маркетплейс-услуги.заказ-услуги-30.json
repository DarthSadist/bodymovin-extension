{"createdAt":"2023-04-03T01:59:31.340Z","updatedAt":"2023-05-11T04:41:14.000Z","id":"30","name":"Маркетплейс услуги.Заказ услуги","active":true,"nodes":[{"parameters":{"path":"b9095edb-6797-43dc-9910-bd6166165677","options":{}},"id":"c9368f63-b24b-47e3-99c2-c09688d078c3","name":"Webhook","type":"n8n-nodes-base.webhook","typeVersion":1,"position":[-1000,240],"webhookId":"57c98b60-ad16-4ae0-868b-d8ee86a3f309"},{"parameters":{"dataType":"string","value1":"={{ $json[\"x\"] }}","rules":{"rules":[{"value2":"1"},{"value2":"2","output":1},{"value2":"3","output":2}]}},"id":"344a2a7b-fea0-4b98-bb6c-6a38d6031a38","name":"Switch","type":"n8n-nodes-base.switch","typeVersion":1,"position":[-400,480]},{"parameters":{"chatId":"={{ $node.Webhook.json.query.telegram_id }}","text":"Выберите месяц для приезда мастера","replyMarkup":"inlineKeyboard","inlineKeyboard":{"rows":[{"row":{"buttons":[{"text":"={{ $node[\"Получение месяца\"].json[\"currentMonthName\"] }}","additionalFields":{"callback_data":"={{ $node[\"Получение месяца\"].json[\"currentMonthName\"] }}"}},{"text":"={{ $node[\"Получение месяца\"].json[\"nextMonthName\"] }}","additionalFields":{"callback_data":"={{ $node[\"Получение месяца\"].json[\"nextMonthName\"] }}"}}]}}]},"additionalFields":{"parse_mode":"HTML"}},"id":"087591b1-f0a0-44df-9897-6f28256ad4df","name":"Отправка месяца","type":"n8n-nodes-base.telegram","typeVersion":1,"position":[-400,-100],"credentials":{"telegramApi":{"id":"33","name":"Маркетплейс услуги"}}},{"parameters":{"jsCode":"// Получаем текущую дату\nconst now = new Date();\n\n// Получаем текущий месяц в числовом формате\nlet currentMonthNumber = now.getMonth() + 1; // месяцы в JavaScript начинаются с 0, поэтому добавляем 1 для получения текущего месяца\n\n// Получаем следующий месяц\nlet nextMonthNumber = currentMonthNumber + 1;\n\n// Если следующий месяц больше декабря (12), то он будет январем (1)\nif (nextMonthNumber > 12) {\n  nextMonthNumber = 1;\n}\n\n// Получаем массив с названиями месяцев на русском языке\nconst monthNames = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n\n// Получаем строковое название текущего месяца на русском языке\nconst currentMonthName = monthNames[currentMonthNumber - 1];\n\n// Получаем строковое название следующего месяца на русском языке\nconst nextMonthName = monthNames[nextMonthNumber - 1];\n\n// Устанавливаем числовые значения и строковые названия текущего и следующего месяцев в свойства \"currentMonthNumber\", \"currentMonthName\", \"nextMonthNumber\" и \"nextMonthName\" для передачи в следующий узел\nreturn { \n  currentMonthNumber: currentMonthNumber,\n  currentMonthName: currentMonthName,\n  nextMonthNumber: nextMonthNumber,\n  nextMonthName: nextMonthName \n};"},"id":"f1c3687d-b0c5-4640-b758-728f5a29ba14","name":"Получение месяца","type":"n8n-nodes-base.code","typeVersion":1,"position":[-400,300]},{"parameters":{"jsCode":"// Получаем текущую дату\nconst now = new Date();\n\n// Получаем текущий месяц в числовом формате\nlet currentMonthNumber = now.getMonth() + 1; // месяцы в JavaScript начинаются с 0, поэтому добавляем 1 для получения текущего месяца\n\n// Получаем следующий месяц\nlet nextMonthNumber = currentMonthNumber + 1;\n\n// Если следующий месяц больше декабря (12), то он будет январем (1)\nif (nextMonthNumber > 12) {\n  nextMonthNumber = 1;\n}\n\n// Получаем массив с названиями месяцев на русском языке\nconst monthNames = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n\n// Получаем строковое название текущего и следующего месяца на русском языке\nconst currentMonthName = monthNames[currentMonthNumber - 1];\nconst nextMonthName = monthNames[nextMonthNumber - 1];\n\n// Получаем текущее число месяца\nconst currentDayOfMonth = now.getDate();\n\n// Возвращаем результат\nreturn {\n  currentMonthNumber: currentMonthNumber,\n  nextMonthNumber: nextMonthNumber,\n  currentMonthName: currentMonthName,\n  nextMonthName: nextMonthName,\n  currentDayOfMonth: currentDayOfMonth\n};"},"id":"d303e13c-fa05-4bb8-ab6c-9b035349832b","name":"Получение месяца1","type":"n8n-nodes-base.code","typeVersion":1,"position":[200,-180]},{"parameters":{"dataType":"string","value1":"={{ $node[\"days\"].json[\"days\"] }}","rules":{"rules":[{"value2":"28"},{"value2":"30","output":1},{"value2":"31","output":2}]}},"id":"a7802756-52e6-4023-a883-55d6b1d2c9db","name":"Switch1","type":"n8n-nodes-base.switch","typeVersion":1,"position":[180,360]},{"parameters":{"dataType":"string","value1":"={{ $node[\"month_int\"].json[\"month_int\"] }}","rules":{"rules":[{"operation":"regex","value2":"={{ $json.currentMonthNumber }}"},{"operation":"regex","value2":"={{ $json.nextMonthNumber }}","output":1}]}},"id":"6411da67-e53d-41ef-afe5-d00991ebc724","name":"Switch4","type":"n8n-nodes-base.switch","typeVersion":1,"position":[660,520]},{"parameters":{"dataType":"string","value1":"={{ $node[\"month_int\"].json[\"month_int\"] }}","rules":{"rules":[{"operation":"regex","value2":"={{ $json.currentMonthNumber }}"},{"operation":"regex","value2":"={{ $json.nextMonthNumber }}","output":1}]}},"id":"83aa75b3-24b0-4534-abf9-8d35c9b7e956","name":"Switch5","type":"n8n-nodes-base.switch","typeVersion":1,"position":[920,160]},{"parameters":{"dataType":"string","value1":"={{ $node[\"month_int\"].json[\"month_int\"] }}","rules":{"rules":[{"operation":"regex","value2":"={{ $json.currentMonthNumber }}"},{"operation":"regex","value2":"={{ $json.nextMonthNumber }}","output":1}]}},"id":"d21fa9c2-fd4f-4249-a0dc-aaff35570be1","name":"Switch6","type":"n8n-nodes-base.switch","typeVersion":1,"position":[380,-180]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите день в который мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"reply_markup\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"5b717304-d39f-4cdd-963f-3a8add0b362c","name":"HTTP Request","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1320,20]},{"parameters":{"jsCode":"const now = new Date();\nconst currentYear = now.getFullYear();\nconst currentMonth = now.getMonth() + 1;\nconst currentDay = now.getDate();\n\n// Получаем количество дней в следующем месяце\nconst daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate(); \n\nlet inline_keyboard = [];\nlet row = [];\n\nfor (let i = 1; i <= daysInMonth; i++) {\n  const day = (i < 10) ? '0' + i : i.toString();\n  const month = (currentMonth + 1 < 10) ? '0' + (currentMonth + 1) : (currentMonth + 1).toString();\n\n  row.push({\n    text: day + '.' + month,\n    callback_data: day + '.' + month + '.' + currentYear,\n  });\n\n  if (row.length === 6) {\n    inline_keyboard.push(row);\n    row = [];\n  }\n}\n\nif (row.length > 0) {\n  inline_keyboard.push(row);\n}\n\nconst reply_markup = { inline_keyboard: inline_keyboard };\n\nreturn {\n    json: {\n        reply_markup: JSON.stringify(reply_markup)\n    }\n}"},"id":"8dc00b0e-33da-4c01-a564-068d997e564e","name":"кнопки с датой6","type":"n8n-nodes-base.code","typeVersion":1,"position":[1180,180]},{"parameters":{"jsCode":"const now = new Date();\nconst currentYear = now.getFullYear();\nconst currentMonth = now.getMonth() + 1;\nconst currentDay = now.getDate();\n\n// Получаем количество дней в следующем месяце\nconst daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate(); \n\nlet inline_keyboard = [];\nlet row = [];\n\nfor (let i = 1; i <= daysInMonth; i++) {\n  const day = (i < 10) ? '0' + i : i.toString();\n  const month = (currentMonth + 1 < 10) ? '0' + (currentMonth + 1) : (currentMonth + 1).toString();\n\n  row.push({\n    text: day + '.' + month,\n    callback_data: day + '.' + month + '.' + currentYear,\n  });\n\n  if (row.length === 6) {\n    inline_keyboard.push(row);\n    row = [];\n  }\n}\n\nif (row.length > 0) {\n  inline_keyboard.push(row);\n}\n\nconst reply_markup = { inline_keyboard: inline_keyboard };\n\nreturn {\n    json: {\n        reply_markup: JSON.stringify(reply_markup)\n    }\n}"},"id":"013b7d52-61e1-472b-b40a-2bad2cf3be78","name":"кнопки с датой9","type":"n8n-nodes-base.code","typeVersion":1,"position":[560,-160]},{"parameters":{"jsCode":"const now = new Date();\nconst currentYear = now.getFullYear();\nconst currentMonth = now.getMonth() + 1;\nconst currentDay = now.getDate();\n\n// Получаем количество дней в следующем месяце\nconst daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate(); \n\nlet inline_keyboard = [];\nlet row = [];\n\nfor (let i = 1; i <= daysInMonth; i++) {\n  const day = (i < 10) ? '0' + i : i.toString();\n  const month = (currentMonth + 1 < 10) ? '0' + (currentMonth + 1) : (currentMonth + 1).toString();\n\n  row.push({\n    text: day + '.' + month,\n    callback_data: day + '.' + month + '.' + currentYear,\n  });\n\n  if (row.length === 6) {\n    inline_keyboard.push(row);\n    row = [];\n  }\n}\n\nif (row.length > 0) {\n  inline_keyboard.push(row);\n}\n\nconst reply_markup = { inline_keyboard: inline_keyboard };\n\nreturn {\n    json: {\n        reply_markup: JSON.stringify(reply_markup)\n    }\n}"},"id":"08b2467d-6f0c-444b-a32e-339c75c97369","name":"кнопки с датой10","type":"n8n-nodes-base.code","typeVersion":1,"position":[860,520]},{"parameters":{"content":"28 дней в месяце","height":309.5967741935481,"width":819.1532258064512},"id":"59b1ed2d-8b76-4c23-90f4-a30d6a1c22dd","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[140,-320]},{"parameters":{"content":"30 дней в месяце","height":324.556451612903,"width":910.5119347786449},"id":"6b214026-86b2-46f0-81c1-3a021892557f","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[591.8670974794193,3.3870967741938216]},{"parameters":{"content":"31 день в месяце","height":326.6935483870963,"width":686.6532258064515},"id":"f13ab580-d552-44ad-bf99-32c9b8af59e9","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[460,344.5967741935487]},{"parameters":{"content":"Выбор месяца","height":733.3020811376346,"width":827.8300707985072},"id":"3927174d-80ae-46b2-9e6f-a42420ac68f6","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1013.9591030565716,-139.31451612903197]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите день в кторорый мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"reply_markup\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"df92a9c2-b677-495d-95bf-d52ef8cb5471","name":"HTTP Request3","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1340,180]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите день в который мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"reply_markup\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"717bb70b-c0a2-487e-b45a-d873e87c4921","name":"HTTP Request4","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1020,360]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите день в который мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"reply_markup\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"10cba929-1f02-4968-9cd4-3adcb09abcff","name":"HTTP Request8","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[1020,520]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите день в который мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"reply_markup\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"be1b4e96-2353-414c-99e4-44e8df1ec244","name":"HTTP Request1","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[780,-300]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите день в который мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"reply_markup\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"f2c217a3-0d78-4fb4-9dd1-d4c373f66257","name":"HTTP Request6","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[780,-160]},{"parameters":{"content":"ВЫБОР ВРЕМЕНИ\n","height":227.57695852534573,"width":427.37056340356423},"id":"ec8c6b96-3bf4-440f-a27a-a37ec5bb5926","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[460,680]},{"parameters":{"jsCode":"// Получаем входные данные\nconst inputData = items[0].json;\n\n// Создаем переменную для хранения значения x\nlet xValue;\n\n// Перебираем переменные и ищем значение x\ninputData.query.variables.forEach((variable) => {\n  if (variable.name === 'x') {\n    xValue = variable.value;\n  }\n});\n\n// Возвращаем объект с единственным свойством x\nreturn [{ json: { x: xValue } }];"},"id":"686d3d29-daf5-4ac6-8215-8e4277f3ece6","name":"x","type":"n8n-nodes-base.code","typeVersion":1,"position":[-700,300],"alwaysOutputData":true},{"parameters":{"jsCode":"// Получаем входные данные\nconst inputData = items[0].json;\n\n// Создаем переменную для хранения значения delay\nlet delayValue;\n\n// Проверяем, определен ли объект inputData.query, и перебираем его переменные\nif (inputData.query && inputData.query.variables) {\n  inputData.query.variables.forEach((variable) => {\n    if (variable.name === 'delay') {\n      delayValue = variable.value;\n    }\n  });\n}\n\n// Возвращаем объект с единственным свойством delay\nreturn [{ json: { delay: delayValue } }];"},"id":"6346da75-8315-45b5-b344-49f4de760b95","name":"delay","type":"n8n-nodes-base.code","typeVersion":1,"position":[-700,-120],"alwaysOutputData":true},{"parameters":{"jsCode":"// Получаем входные данные\nconst inputData = items[0].json;\n\n// Создаем переменную для хранения значения days\nlet daysValue;\n\n// Проверяем, определен ли объект inputData.query, и перебираем его переменные\nif (inputData.query && inputData.query.variables) {\n  inputData.query.variables.forEach((variable) => {\n    if (variable.name === 'days') {\n      daysValue = variable.value;\n    }\n  });\n}\n\n// Возвращаем объект с единственным свойством days\nreturn [{ json: { days: daysValue } }];"},"id":"7ecb19b8-8c9b-4fb0-aef7-f094f2509caa","name":"days","type":"n8n-nodes-base.code","typeVersion":1,"position":[-700,20],"alwaysOutputData":true},{"parameters":{"jsCode":"// Получаем входные данные\nconst inputData = items[0].json;\n\n// Создаем переменную для хранения значения month_int\nlet monthIntValue;\n\n// Проверяем, определен ли объект inputData.query, и перебираем его переменные\nif (inputData.query && inputData.query.variables) {\n  inputData.query.variables.forEach((variable) => {\n    if (variable.name === 'month_int') {\n      monthIntValue = variable.value;\n    }\n  });\n}\n\n// Возвращаем объект с единственным свойством month_int\nreturn [{ json: { month_int: monthIntValue } }];"},"id":"6c045f14-5061-4133-83fd-a473321997ce","name":"month_int","type":"n8n-nodes-base.code","typeVersion":1,"position":[-700,160],"alwaysOutputData":true},{"parameters":{"jsCode":"// Получаем текущую дату\nconst now = new Date();\n\n// Получаем текущий месяц в числовом формате\nlet currentMonthNumber = now.getMonth() + 1; // месяцы в JavaScript начинаются с 0, поэтому добавляем 1 для получения текущего месяца\n\n// Получаем следующий месяц\nlet nextMonthNumber = currentMonthNumber + 1;\n\n// Если следующий месяц больше декабря (12), то он будет январем (1)\nif (nextMonthNumber > 12) {\n  nextMonthNumber = 1;\n}\n\n// Получаем массив с названиями месяцев на русском языке\nconst monthNames = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n\n// Получаем строковое название текущего и следующего месяца на русском языке\nconst currentMonthName = monthNames[currentMonthNumber - 1];\nconst nextMonthName = monthNames[nextMonthNumber - 1];\n\n// Получаем текущее число месяца\nconst currentDayOfMonth = now.getDate();\n\n// Возвращаем результат\nreturn {\n  currentMonthNumber: currentMonthNumber,\n  nextMonthNumber: nextMonthNumber,\n  currentMonthName: currentMonthName,\n  nextMonthName: nextMonthName,\n  currentDayOfMonth: currentDayOfMonth\n};"},"id":"bd529463-0c1e-414b-b667-cffe75c65c4f","name":"получение месяца","type":"n8n-nodes-base.code","typeVersion":1,"position":[660,160]},{"parameters":{"jsCode":"const startTime = 9;  // начальный час\nconst endTime = 19;   // конечный час\nconst interval = 1;   // длительность интервала в часах\nconst rows = [];      // массив строк кнопок\nlet hour = startTime; // текущий час\n\nwhile (hour < endTime) {\n  const startHour = hour < 10 ? '0' + hour : hour.toString();\n  const endHour = hour + interval < 10 ? '0' + (hour + interval) : (hour + interval).toString();\n  const buttonTextAndData = `${startHour}:00 - ${endHour}:00`;\n  const button = { text: buttonTextAndData, callback_data: buttonTextAndData };\n  const lastRow = rows[rows.length - 1];\n\n  if (!lastRow || lastRow.length === 2) {\n    rows.push([button]);\n  } else {\n    lastRow.push(button);\n  }\n\n  hour += interval;\n}\n\nconst replyMarkup = { inline_keyboard: rows };\nconst replyMarkupJson = JSON.stringify(replyMarkup, null, 2);\n\nreturn { replyMarkupJson };"},"id":"cd20a72f-0250-4477-a42a-658cccab1197","name":"часы работы","type":"n8n-nodes-base.code","typeVersion":1,"position":[480,740]},{"parameters":{"url":"https://api.telegram.org/bot6255776658:AAE7tUXJpMBh9ZZN7BhV03bPvyfD5g3peQU/editMessageText","sendBody":true,"bodyParameters":{"parameters":[{"name":"=chat_id","value":"={{ $node[\"Webhook\"].json[\"query\"][\"contact\"][\"telegram_id\"] }}"},{"name":"text","value":"Выберите промежуток времени в которое мастер может приехать"},{"name":"reply_markup","value":"={{ $json[\"replyMarkupJson\"] }}"},{"name":"message_id","value":"={{ $node[\"delay\"].json[\"delay\"] }}"}]},"options":{}},"id":"ddb031ff-d095-43dd-a976-7cb7102457f5","name":"выбор времени","type":"n8n-nodes-base.httpRequest","typeVersion":3,"position":[740,740]},{"parameters":{"jsCode":"// Получаем текущую дату\nconst now = new Date();\n\n// Получаем текущий месяц в числовом формате\nlet currentMonthNumber = now.getMonth() + 1; // месяцы в JavaScript начинаются с 0, поэтому добавляем 1 для получения текущего месяца\n\n// Получаем следующий месяц\nlet nextMonthNumber = currentMonthNumber + 1;\n\n// Если следующий месяц больше декабря (12), то он будет январем (1)\nif (nextMonthNumber > 12) {\n  nextMonthNumber = 1;\n}\n\n// Получаем массив с названиями месяцев на русском языке\nconst monthNames = [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"];\n\n// Получаем строковое название текущего и следующего месяца на русском языке\nconst currentMonthName = monthNames[currentMonthNumber - 1];\nconst nextMonthName = monthNames[nextMonthNumber - 1];\n\n// Получаем текущее число месяца\nconst currentDayOfMonth = now.getDate();\n\n// Возвращаем результат\nreturn {\n  currentMonthNumber: currentMonthNumber,\n  nextMonthNumber: nextMonthNumber,\n  currentMonthName: currentMonthName,\n  nextMonthName: nextMonthName,\n  currentDayOfMonth: currentDayOfMonth\n};"},"id":"f4b02fa1-37c4-4147-8e54-ed89344745ec","name":"получение месяц2","type":"n8n-nodes-base.code","typeVersion":1,"position":[500,520]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"Count","value":"={{ $node[\"отсчет\"].json[\"время\"] }}"},{"name":"type","value":"={{ $node[\"отсчет\"].json[\"type\"] }}"}]},"options":{}},"id":"9053ccb7-27c3-480b-b6c5-c55d877ff779","name":"Set","type":"n8n-nodes-base.set","typeVersion":2,"position":[860,20]},{"parameters":{"jsCode":"const inputData = items[0].json;\nlet timeValue;\nlet timeType;\ninputData.query.variables.forEach((variable) => {\n  if (variable.name === 'время') {\n    timeValue = variable.value;\n    timeType = variable.type;\n  }\n});\nreturn [\n  {\n    json: {\n      время: timeValue,\n      type: timeType\n    }\n  }\n];"},"id":"256c27a8-809e-4f54-8cdd-734c2f4f8bc1","name":"отсчет","type":"n8n-nodes-base.code","typeVersion":1,"position":[-700,460]},{"parameters":{"jsCode":"const dateString = $node[\"Set\"].json[\"Count\"]; // получаем строку из узла Set\nconst dateParts = dateString.split('.'); // разбиваем строку на массив из трех элементов: день, месяц, год\nconst year = dateParts[2];\nconst month = dateParts[1].padStart(2, '0');\nconst day = dateParts[0].padStart(2, '0');\nconst formattedDate = `${day}.${month}.${year}`;\n\nreturn {\n  json: {\n    date: formattedDate // возвращаем преобразованную дату в формате JSON\n  }\n};"},"id":"4651f106-3bf0-4544-8805-0b9dd73a18f6","name":"Code","type":"n8n-nodes-base.code","typeVersion":1,"position":[1020,20]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"Count","value":"={{ $node[\"отсчет\"].json[\"время\"] }}"},{"name":"type","value":"={{ $node[\"отсчет\"].json[\"type\"] }}"}]},"options":{}},"id":"12146b40-e64c-4ce4-8811-d306b326d723","name":"Set1","type":"n8n-nodes-base.set","typeVersion":2,"position":[480,400]},{"parameters":{"jsCode":"const dateString = $node[\"Set1\"].json[\"Count\"]; // получаем строку из узла Set\nconst dateParts = dateString.split('.'); // разбиваем строку на массив из трех элементов: день, месяц, год\nconst year = dateParts[2];\nconst month = dateParts[1].padStart(2, '0');\nconst day = dateParts[0].padStart(2, '0');\nconst formattedDate = `${day}.${month}.${year}`;\n\nreturn {\n  json: {\n    date: formattedDate // возвращаем преобразованную дату в формате JSON\n  }\n};"},"id":"ab2ebfe1-7cf1-4ae4-a646-23271c88712d","name":"Code2","type":"n8n-nodes-base.code","typeVersion":1,"position":[680,360]},{"parameters":{"keepOnlySet":true,"values":{"string":[{"name":"Count","value":"={{ $node[\"отсчет\"].json[\"время\"] }}"},{"name":"type","value":"={{ $node[\"отсчет\"].json[\"type\"] }}"}]},"options":{}},"id":"de754c87-b214-4761-9dbb-1350badc07b4","name":"Set2","type":"n8n-nodes-base.set","typeVersion":2,"position":[200,-300]},{"parameters":{"jsCode":"const dateString = $node[\"Set2\"].json[\"Count\"]; // получаем строку из узла Set\nconst dateParts = dateString.split('.'); // разбиваем строку на массив из трех элементов: день, месяц, год\nconst year = dateParts[2];\nconst month = dateParts[1].padStart(2, '0');\nconst day = dateParts[0].padStart(2, '0');\nconst formattedDate = `${day}.${month}.${year}`;\n\nreturn {\n  json: {\n    date: formattedDate // возвращаем преобразованную дату в формате JSON\n  }\n};"},"id":"2901b726-77cb-44e5-8a0a-06224195de02","name":"Code3","type":"n8n-nodes-base.code","typeVersion":1,"position":[380,-300]},{"parameters":{"jsCode":"return new Promise((resolve) => {\n  setTimeout(() => {\n    resolve({ });\n  }, 5000);\n});"},"id":"547fcbbe-cb6d-4b3c-b207-0923448e2ba9","name":"задержка","type":"n8n-nodes-base.code","typeVersion":1,"position":[-400,60]},{"parameters":{"jsCode":"const dateString = $json[\"date\"]; // получаем строку из входных данных\nconst dateParts = dateString.split('.'); // разбиваем строку на массив из трех элементов: день, месяц, год\nconst year = parseInt(dateParts[2]);\nconst month = parseInt(dateParts[1]);\nconst day = parseInt(dateParts[0]);\n\nconst daysInMonth = new Date(year, month, 0).getDate(); // Получаем количество дней в текущем месяце\n\nlet inline_keyboard = [];\nlet row = [];\n\nfor (let i = day; i <= daysInMonth; i++) {\n  const dayStr = (i < 10) ? '0' + i : i.toString();\n  const monthStr = (month < 10) ? '0' + month : month.toString();\n\n  row.push({\n    text: dayStr + '.' + monthStr,\n    callback_data: dayStr + '.' + monthStr + '.' + year,\n  });\n\n  if (row.length === 6) {\n    inline_keyboard.push(row);\n    row = [];\n  }\n}\n\nif (row.length > 0) {\n  inline_keyboard.push(row);\n}\n\nconst reply_markup = { inline_keyboard: inline_keyboard };\n\nreturn {\n    json: {\n        reply_markup: JSON.stringify(reply_markup)\n    }\n}"},"id":"af5110c7-1e18-49bc-ab01-d7b91c27dc36","name":"кнопки 28 дней","type":"n8n-nodes-base.code","typeVersion":1,"position":[560,-300]},{"parameters":{"jsCode":"const dateString = $json[\"date\"]; // получаем строку из входных данных\nconst dateParts = dateString.split('.'); // разбиваем строку на массив из трех элементов: день, месяц, год\nconst year = parseInt(dateParts[2]);\nconst month = parseInt(dateParts[1]);\nconst day = parseInt(dateParts[0]);\n\nconst daysInMonth = new Date(year, month, 0).getDate(); // Получаем количество дней в текущем месяце\n\nlet inline_keyboard = [];\nlet row = [];\n\nfor (let i = day; i <= daysInMonth; i++) {\n  const dayStr = (i < 10) ? '0' + i : i.toString();\n  const monthStr = (month < 10) ? '0' + month : month.toString();\n\n  row.push({\n    text: dayStr + '.' + monthStr,\n    callback_data: dayStr + '.' + monthStr + '.' + year,\n  });\n\n  if (row.length === 6) {\n    inline_keyboard.push(row);\n    row = [];\n  }\n}\n\nif (row.length > 0) {\n  inline_keyboard.push(row);\n}\n\nconst reply_markup = { inline_keyboard: inline_keyboard };\n\nreturn {\n    json: {\n        reply_markup: JSON.stringify(reply_markup)\n    }\n}"},"id":"521348d5-12bf-4d9f-9a4c-9e89a6fecc5d","name":"кнопки 30 дней","type":"n8n-nodes-base.code","typeVersion":1,"position":[1180,20]},{"parameters":{"jsCode":"const dateString = $json[\"date\"]; // получаем строку из входных данных\nconst dateParts = dateString.split('.'); // разбиваем строку на массив из трех элементов: день, месяц, год\nconst year = parseInt(dateParts[2]);\nconst month = parseInt(dateParts[1]);\nconst day = parseInt(dateParts[0]);\n\nconst daysInMonth = new Date(year, month, 0).getDate(); // Получаем количество дней в текущем месяце\n\nlet inline_keyboard = [];\nlet row = [];\n\nfor (let i = day; i <= daysInMonth; i++) {\n  const dayStr = (i < 10) ? '0' + i : i.toString();\n  const monthStr = (month < 10) ? '0' + month : month.toString();\n\n  row.push({\n    text: dayStr + '.' + monthStr,\n    callback_data: dayStr + '.' + monthStr + '.' + year,\n  });\n\n  if (row.length === 6) {\n    inline_keyboard.push(row);\n    row = [];\n  }\n}\n\nif (row.length > 0) {\n  inline_keyboard.push(row);\n}\n\nconst reply_markup = { inline_keyboard: inline_keyboard };\n\nreturn {\n    json: {\n        reply_markup: JSON.stringify(reply_markup)\n    }\n}"},"id":"dbbedc75-a78f-416a-af32-d8746f5125f0","name":"кнопки 31 день","type":"n8n-nodes-base.code","typeVersion":1,"position":[840,360]}],"connections":{"Webhook":{"main":[[{"node":"x","type":"main","index":0},{"node":"delay","type":"main","index":0},{"node":"month_int","type":"main","index":0},{"node":"days","type":"main","index":0},{"node":"отсчет","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Получение месяца","type":"main","index":0}],[{"node":"Switch1","type":"main","index":0}],[{"node":"часы работы","type":"main","index":0}]]},"Получение месяца":{"main":[[{"node":"задержка","type":"main","index":0}]]},"Switch1":{"main":[[{"node":"Получение месяца1","type":"main","index":0}],[{"node":"получение месяца","type":"main","index":0}],[{"node":"получение месяц2","type":"main","index":0}]]},"Получение месяца1":{"main":[[{"node":"Switch6","type":"main","index":0}]]},"Switch5":{"main":[[{"node":"Set","type":"main","index":0}],[{"node":"кнопки с датой6","type":"main","index":0}]]},"кнопки с датой6":{"main":[[{"node":"HTTP Request3","type":"main","index":0}]]},"Switch6":{"main":[[{"node":"Set2","type":"main","index":0}],[{"node":"кнопки с датой9","type":"main","index":0}]]},"Switch4":{"main":[[{"node":"Set1","type":"main","index":0}],[{"node":"кнопки с датой10","type":"main","index":0}]]},"кнопки с датой10":{"main":[[{"node":"HTTP Request8","type":"main","index":0}]]},"кнопки с датой9":{"main":[[{"node":"HTTP Request6","type":"main","index":0}]]},"x":{"main":[[{"node":"Switch","type":"main","index":0}]]},"delay":{"main":[[{"node":"Switch","type":"main","index":0}]]},"days":{"main":[[{"node":"Switch","type":"main","index":0}]]},"month_int":{"main":[[{"node":"Switch","type":"main","index":0}]]},"получение месяца":{"main":[[{"node":"Switch5","type":"main","index":0}]]},"часы работы":{"main":[[{"node":"выбор времени","type":"main","index":0}]]},"получение месяц2":{"main":[[{"node":"Switch4","type":"main","index":0}]]},"Set":{"main":[[{"node":"Code","type":"main","index":0}]]},"отсчет":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Code":{"main":[[{"node":"кнопки 30 дней","type":"main","index":0}]]},"задержка":{"main":[[{"node":"Отправка месяца","type":"main","index":0}]]},"Code2":{"main":[[{"node":"кнопки 31 день","type":"main","index":0}]]},"Set2":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Code3":{"main":[[{"node":"кнопки 28 дней","type":"main","index":0}]]},"Set1":{"main":[[{"node":"Code2","type":"main","index":0}]]},"кнопки 28 дней":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"кнопки 30 дней":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"кнопки 31 день":{"main":[[{"node":"HTTP Request4","type":"main","index":0}]]}},"settings":{"saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner","errorWorkflow":"10"},"staticData":null,"meta":null,"pinData":{},"versionId":"61a453e7-0e31-4df5-81ab-baa3f1dca714","triggerCount":1,"tags":[]}